       // I tried Sub-Habits CheckBox Logic but I couldn't complete the project in time so this was skipped and saved as text
       // I have copied the whole parent_child_checkbox from pub.dev and modified it for my own use.
       // It is saved as custom_parent_checkbox.dart in this same folder
       
        Alert(
          style: const AlertStyle(isButtonVisible: false),
          context: context,
          // title: "C",
          content: Column(
            children: <Widget>[
              SvgPicture.asset(
                ImageConstant.question,
                color: ColorConstant.redA700,
                height: getVerticalSize(50),
              ),
              SizedBox(height: getHorizontalSize(20)),
              Text(
                "Have you completed this habit?",
                maxLines: null,
                textAlign: TextAlign.center,
                style: AppStyle.txtPJSm14Gray600.copyWith(
                  letterSpacing: getHorizontalSize(
                    0.07,
                  ),
                ),
              ),
              SizedBox(height: getHorizontalSize(20)),
              OutlinedButton(
                onPressed: () => Navigator.pop(context),
                style: HOutlinedButtontheme.cancelTheme.copyWith(
                    side: MaterialStatePropertyAll(
                        BorderSide(color: ColorConstant.redA700))),
                child: const Text("Don't show this agian"),
              ),
              OutlinedButton(
                onPressed: () {
                  setState(() {
                    widget.parentValue = !widget.parentValue!;
                    ParentChildCheckbox._isParentSelected
                        .update(widget.parent!.data, (value) => widget.parentValue);
                    ParentChildCheckbox._selectedChildrenMap.addAll({
                      widget.parent!.data: [],
                    });
                    for (int i = 0; i < widget.children!.length; i++) {
                      widget.childrenValue[i] = widget.parentValue!;
                      if (widget.parentValue!) {
                        ParentChildCheckbox._selectedChildrenMap
                            .update(widget.parent!.data, (value) {
                          value.add(widget.children![i].data);
                          return value;
                        });
                      }
                    }
                    Navigator.pop(context);
                  });
                },
                // style: HOutlinedButtontheme.lo,
                child: Text(
                  " Yes! I have completed",
                  style: AppStyle.txtPJSm14Gray600.copyWith(
                    color: Colors.white,
                    letterSpacing: getHorizontalSize(0.07),
                  ),
                ),
              ),
            ],
          ),
        ).show();,
    )